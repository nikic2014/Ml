# -*- coding: utf-8 -*-
"""Python_6sem.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1wO8w-Hc3Bf2IGLCoe6YgN4dOHtLlXy5E

# Ввод данных и их анализ
"""

# Commented out IPython magic to ensure Python compatibility.
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
# %matplotlib inline
import seaborn as sns
sns.set()  # устанавливаем seaborn по умолчанию для отрисовки графиков

from google.colab import files

files.upload()

penguins = pd.read_csv('penguins.csv')
penguins

penguins.describe() # общая статистика числовых данных

penguins.describe(include=['O']) # общая статистика нечисловых данных

penguins.info()

"""# Заполнение пропусков"""

penguins.isnull().sum()

penguins[penguins.bill_length_mm.isnull()]

penguins.drop(index=3, inplace=True)
penguins.drop(index=271, inplace=True)

penguins.isnull().sum()

penguins[penguins.sex.isnull()]

penguins.sex.mode()

penguins.sex = penguins.sex.fillna('male') # заменим недостающие значения модой
penguins.isnull().sum()

"""# Визуализация данных"""

sns.countplot(x=penguins["sex"])

sns.countplot(x=penguins["island"])

plt.hist(penguins['bill_length_mm'])

plt.hist(penguins['bill_depth_mm'])

plt.hist(penguins['body_mass_g'])

sns.countplot(data=penguins, x='island', hue='species')

sns.countplot(data=penguins, x='body_mass_g', hue='species') #для каждого веса выбрались острова
#plt.scatter(x=penguins['body_mass_g'], y = penguins['bill_length_mm'], c = penguins['species'])

sns.countplot(data=penguins, x='sex', hue='species')

"""# Поиск выбросов"""

sns.boxplot(data=penguins, y='bill_length_mm', x='species')

sns.boxplot(data=penguins, y='bill_depth_mm', x='species')

sns.boxplot(data=penguins, y='flipper_length_mm', x='species')

sns.boxplot(data=penguins, y='body_mass_g', x='species')

sns.pairplot(penguins, kind="scatter", hue="body_mass_g")

sns.lineplot(data=penguins, x='bill_length_mm', y='bill_depth_mm')

sns.lineplot(data=penguins, x='bill_depth_mm', y='bill_length_mm')

"""# Нормализация количественного признака"""

from sklearn.preprocessing import MinMaxScaler  # StandardScaler 

scaler_mm = MinMaxScaler()

penguins[['mm_bill_length', 'mm_bill_depth', 'mm_flipper_length', 'mm_body_mass_g']] = scaler_mm.fit_transform(penguins[['bill_length_mm', 'bill_depth_mm', 'flipper_length_mm', 'body_mass_g']])

sns.lineplot(data=penguins, x='mm_bill_depth', y='mm_bill_length')

sns.lineplot(data=penguins, x='mm_bill_length', y='mm_bill_depth')

sns.lineplot(data=penguins, x='mm_flipper_length', y='mm_body_mass_g')

"""# Кодирование категориальных признаков"""

from sklearn.preprocessing import LabelEncoder
labelencoder_sex = LabelEncoder()
penguins['sex'] = labelencoder_sex.fit_transform(penguins['sex'])
labelencoder_species = LabelEncoder()
penguins['species'] = labelencoder_species.fit_transform(penguins['species'])
labelencoder_island = LabelEncoder()
penguins['island'] = labelencoder_island.fit_transform(penguins['island'])
penguins

"""# Зависимость признаков"""

sns.lineplot(data=penguins, x='mm_flipper_length', y='mm_body_mass_g')

"""# Тепловая карта"""

sns.heatmap(penguins.corr()) #значение коэффициента кореляции

"""На основе данных и их разведычного анализа можно сделать сделющие выводы:

Параметр sex не играет роли;

Для определения species важными являются Island, bill_depth, flipper_length;


Длина крыльев и масса тела прямопропорциональны.
"""